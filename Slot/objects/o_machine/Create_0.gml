// Slots.cpp : This file contains the "main" function. Program execution begins and ends there.
// Gamba

LIST =  [["A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W"],//Reel 1
    ["A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W"], 
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "B"],
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "B"],
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "B"]
	]; //Reel 5
BONUSLIST = [
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "W"],//Reel 1
    [ "W"],
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "W"],
    [ "W"],
    [ "A", "a", "K", "k", "Q", "q", "J", "j", "S", "s", "W", "W"] //Reel 5
];

//const vector<char> LIST[ "A", "K", "Q", "J", "A", "K", "Q", "J","A", "K", "Q", "J", "S", "S", "s", "s", "W" ];
//const vector<char> LIST[ "A", "K", "Q", "J", "S", "W" ];
//const vector<char> LIST[ "W", "W" ];
VALUES = [ ["A", 6],["K", 6],["Q", 5],["J", 5],["S", 10],["B", 10], ["W", 10],["s", 8], ["a", 4], ["k", 4], ["q", 4], ["j", 4] ];

LINES15 = [  ["2","2","2","2","2"], ["1","1","1","1","1"], ["3","3","3","3","3"],
    ["1", "2", "3", "2", "1"], ["3", "2", "1", "2", "3"],
    ["1", "1", "3", "1", "1"],["3", "3", "1", "3", "3"],
    ["1", "1", "2", "3", "3"],["3", "3", "2", "1", "1"],
    ["1", "2", "1", "2", "1"],["3", "2", "3", "2", "3"],["2", "1", "2", "1", "2"],["2", "3", "2", "3", "2"],
    ["2", "1", "2", "3", "2"],["2", "3", "2", "1", "2"] 
];
LINES30 = [ ["2","2","2","2","2"],["1","1","1","1","1"],["3","3","3","3","3"], 
    ["1", "2", "3", "2", "1"],["3", "2", "1", "2", "3"],
    ["1", "1", "2", "1", "1"],["3", "3", "2", "3", "3"],
    ["2", "3", "3", "3", "2"],["2", "1", "1", "1", "2"],["1", "2", "2", "2", "1"],["3", "2", "2", "2", "3"],//11
    ["1", "2", "1", "2", "1"],["3", "2", "3", "2", "3"],["2", "1", "2", "1", "2"],["2", "3", "2", "3", "2"],
    ["2", "2", "1", "2", "2"],["2", "2", "3", "2", "2"],
    ["1", "3", "1", "3", "1"],["3", "1", "3", "1", "3"],//19
    ["2", "1", "3", "1", "2"],["2", "3", "1", "3", "2"],
    ["1", "1", "3", "1", "1"],["3", "3", "1", "3", "3"],
    ["1", "3", "3", "3", "1"],["3", "1", "1", "1", "3"],//25
    ["1", "3", "2", "3", "1"],["3", "1", "2", "1", "3"],
    ["1", "1", "1", "2", "1"],["3", "3", "3", "2", "3"], ["2", "2", "2", "1", "2"]
];
LINES50 = [ ["2","2","2","2","2"],["1","1","1","1","1"],["3","3","3","3","3"],
    ["1", "2", "3", "2", "1"],["3", "2", "1", "2", "3"],
    ["1", "1", "2", "1", "1"],["3", "3", "2", "3", "3"],
    ["2", "3", "3", "3", "2"],["2", "1", "1", "1", "2"],["1", "2", "2", "2", "1"],["3", "2", "2", "2", "3"],//11
    ["1", "2", "1", "2", "1"],["3", "2", "3", "2", "3"],["2", "1", "2", "1", "2"],["2", "3", "2", "3", "2"],
    ["2", "2", "1", "2", "2"],["2", "2", "3", "2", "2"],
    ["1", "3", "1", "3", "1"],["3", "1", "3", "1", "3"],//19
    ["2", "1", "3", "1", "2"],["2", "3", "1", "3", "2"],
    ["1", "1", "3", "1", "1"],["3", "3", "1", "3", "3"],
    ["1", "3", "3", "3", "1"],["3", "1", "1", "1", "3"],//25
    ["1", "3", "2", "3", "1"],["3", "1", "2", "1", "3"],
    ["1", "1", "1", "2", "1"],["3", "3", "3", "2", "3"], ["2", "2", "2", "1", "2"],//30
    ["2", "1", "3", "2", "1"],["2", "3", "1", "2", "3"],
    ["1", "3", "2", "1", "3"],["3", "1", "2", "3", "1"],
    ["2", "1", "2", "3", "2"],["2", "3", "2", "1", "2"],
    ["1", "2", "1", "2", "3"],["3", "2", "3", "2", "1"],
    ["1", "1", "3", "3", "3"],["3", "3", "1", "1", "1"],//40
    ["2", "1", "2", "3", "3"],["2", "3", "2", "1", "1"],
    ["3", "2", "1", "3", "2"],["1", "2", "3", "1", "2"],
    ["2", "3", "3", "1", "1"],["3", "1", "1", "2", "3"],
    ["1", "1", "2", "2", "3"],["3", "3", "2", "2", "1"],
    ["1", "3", "2", "2", "1"],["3", "1", "2", "2", "3"]
];
	rList = "AKQJSs";
	var rll = [];
    money = 0;
    bet = 1;
	lines = 15;
    max = 0;
    spins = 0;
    total = 0.0;
    LINES = LINES30;
	amount = 0;
	line = "";
	BONUS = 0;

	random_set_seed(noone);
    money = 20000;
    bet = 9;
    LINES = 50;
    temp = [];
    input = "";
    inp = "";
    rolls = 0;
    rng = 0;
    regexp = "Nn";
    regex1 = "NnYyBbAaLl";
    regexn = "123456789";
    regexlin = ["15", "30", "50"];
    /*
    while (M1.getMW() <= 0) {
    //for (int i = 0; i < 10000; i++){
        if (M1.getBet() * M1.getLines() < M1.getBal()) { M1.addMoney(1000); }
        M1.roll();
        cout << endl;
    }
    cout << "Total Spins " << M1.getSpins() << " Total Balance " << M1.getTotal() << endl;
    cout << M1.getTotal()/ (M1.getSpins()*M1.getBet()) << "% Average" << endl;
    */
    ///*
    
 //   */